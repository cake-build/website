<!-- Search -->
<script type="text/javascript">
    docsearch({
        apiKey: '7c45d75e5cd2fddcb761d830d2b8ee27',
        indexName: 'cakebuild',
        inputSelector: '#search-query',
        debug: false,
        algoliaOptions: {
            hitsPerPage: 10
        }
    });
</script>

<!-- Tooltip initialization -->
<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })
</script>

<!-- Anchor configuration -->
<script>
    // Allow to set ".no-anchor" class to not have an anchor on an element.
    anchors.add('.content h1:not(.no-anchor), .content h2:not(.no-anchor), .content h3:not(.no-anchor), .content h4:not(.no-anchor)');
</script>

<!-- Copy to clipboard functionality for code blocks -->
<script type="text/javascript" src="/assets/js/clipboard.min.js"></script>
<script type="text/javascript">
    var snippets = document.querySelectorAll("pre > code");
    [].forEach.call(snippets, function(snippet) {
        snippet.insertAdjacentHTML("beforebegin", "<button class='btn-copy' data-clipboard-snippet><img class='clippy' width=13 src='@Context.GetLink("/assets/img/clippy.svg")' alt='Copy to clipboard'></button>");
    });
    var clipboardSnippets = new Clipboard('[data-clipboard-snippet]', {
        target: function(trigger) {
            return trigger.nextElementSibling;
        }
    });
    clipboardSnippets.on('success', function(e) {
        e.clearSelection();
        showTooltip(e.trigger, "Copied!");
    });
    clipboardSnippets.on('error', function(e) {
        showTooltip(e.trigger, fallbackMessage(e.action));
    });
    var btns = document.querySelectorAll('.btn-copy');
    for (var i = 0; i < btns.length; i++) {
        btns[i].addEventListener('mouseleave', function(e) {
            e.currentTarget.setAttribute('class', 'btn-copy');
            e.currentTarget.removeAttribute('aria-label');
        });
    }
    function showTooltip(elem, msg) {
        elem.setAttribute('class', 'btn-copy tooltipped tooltipped-s');
        elem.setAttribute('aria-label', msg);
    }
    function fallbackMessage(action) {
        var actionMsg = '';
        var actionKey = (action === 'cut' ? 'X' : 'C');
        if (/iPhone|iPad/i.test(navigator.userAgent)) {
            actionMsg = 'No support :(';
        } else if (/Mac/i.test(navigator.userAgent)) {
            actionMsg = 'Press âŒ˜-' + actionKey + ' to ' + action;
        } else {
            actionMsg = 'Press Ctrl-' + actionKey + ' to ' + action;
        }
        return actionMsg;
    }
</script>