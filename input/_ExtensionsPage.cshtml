@model IEnumerable<IDocument>

@{
    var extensionType = new List<string> { "Addin", "Module" };

    var extensions =
        Model
            .Where(x =>
                x.String("Type") != null &&
                extensionType.Any(y => y.Equals(x.String("Type"), StringComparison.OrdinalIgnoreCase)))
            .OrderBy(x => x.String("Name"))
            .ToList();
}

<div class="alert alert-info">
    <i class="fa-solid fa-bug" style="margin-right:20px;" aria-hidden="true"></i>If you want to file an issue for any extension listed here please contact the author of the extension.<br/>
    <i class="fa-solid fa-hand-pointer" style="margin-right:20px;" aria-hidden="true"></i>If you have requests for additional addins <a href="https://github.com/cake-build/cake/discussions?discussions_q=category%3A%22Extension+requests%22" target="_blank">start a discussion</a>.<br/>
    <i class="fa-solid fa-plus" style="margin-right:20px;" aria-hidden="true"></i>If you are an extension author and want to have your extension listed, follow the <a href="https://github.com/cake-build/website/blob/master/README.md#extensions" target="_blank">instructions</a>.<br/>
</div>

<section id="extensions">

    <input id="search" type="text" class="search" aria-label="Enter extensions to search" placeholder="Search for extensions..." autocomplete="off" value>

    <div class="row no-margin">
        <div id="result-count" class="col-md-10 no-padding">
            @extensions.Count() extensions found
        </div>
        <div class="col-md-2 col-xs-3 col-sm-1 text-right no-padding">
            <button class="btn-filter" data-toggle="collapse" data-target="#extension-filter" aria-expanded="false" aria-controls="extension-filter">
                <i class="fa-solid fa-filter"></i>
                Sort &amp; Filter
            </button>
        </div>
    </div>

    <div class="panel panel-default collapse" id="extension-filter">
        <div class="row panel-body">
            <div class="col-md-2" id="type-filter">
                <div>Extension types</div>
                <div class="radio">
                    <label>
                        <input type="radio" class="filterType" name="filterType" id="filterTypeAll" value="" checked>
                        All
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" class="filterType" name="filterType" id="filterTypeAddins" value="Addin">
                        Addins
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" class="filterType" name="filterType" id="filterTypeModules" value="Module">
                        Modules
                    </label>
                </div>
            </div>
            <div class="col-md-2">
                <div>Sort by</div>
                <button class="sort btn btn-default asc" data-sort="name">Name</button>
                <button class="sort btn btn-default" data-sort="analyzedpackagepublishdate" data-default-order="desc">Publish Date</button>
            </div>
        </div>
    </div>

    @Html.Partial("_ExtensionsList", extensions)
</section>

<script src="//cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js"></script>
<script>
    var options = {
      valueNames: [
        { data: ['type'] },
        { data: ['name'] },
        { data: ['analyzedpackagepublishdate'] },
        { data: ['categories'] }
      ]
    };

    var extensionList = new List('extensions', options);

    extensionList.on('searchComplete', function() {
        document.getElementById("result-count").innerHTML = extensionList.update().matchingItems.length + " extensions found";
    });

    $('.filterType').on('change', function() {
        var $type = this.value;

        if (!$type) {
            extensionList.filter();
        }
        else {
            extensionList.filter(function(item) {
                return (item.values().type == $type);
            });
        }
    });
</script>