
@model IEnumerable<IDocument>

@using Humanizer;

@{
    var extensions =
        Model
            .OrderBy(x => x.String("Name"))
            .ToList();
}

<div class="list-extensions list" role="list">
    @if (!extensions.Any())
    {
        <p>
            No extensions found
        </p>
    }

    @foreach(IDocument extension in extensions)
    {
        string type = extension.String("Type");
        string name = extension.String("Name");
        string description = extension.String("Description");
        string author = extension.String("Author");
        string version = extension.String("AnalyzedPackageVersion");
        string publishDate = extension.String("AnalyzedPackagePublishDate");
        string categories = (String.Join(", ", extension.List<string>("Categories")));

        <article class="extension row" data-type="@type" data-name="@name" data-analyzedpackagepublishdate="@publishDate" data-categories="@categories">
            <div class="col-sm-1 hidden-xs hidden-sm col-package-icon">
                @switch (type) {
                    case "Addin":
                        <img src="/assets/img/cake-contrib-addin-small.png">
                        break;
                    case "Module":
                        <img src="/assets/img/cake-contrib-module-small.png">
                        break;
                }
            </div>
            <div class="col-sm-11">
                <div class="extension-header">
                    <a class="extension-title" href="/extensions/@name.ToLower().Replace(".", "-")/">@name</a>
                    <span class="extension-by">
                        by @author
                    </span>
                </div>

                <ul class="extension-metadata">
                    <li>
                        Latest version: @version
                    </li>
                    @if (!string.IsNullOrWhiteSpace(publishDate))
                    {
                        var parsedPublishDate = @DateTime.Parse(publishDate, null, System.Globalization.DateTimeStyles.RoundtripKind);

                        <li>
                            <span title="@parsedPublishDate.ToOrdinalWords()">
                                <i class="fa fa-clock-o"></i>
                                Last updated @parsedPublishDate.Humanize()
                            </span>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(categories))
                    {
                        <li>
                            <i class="fa fa-tags"></i>
                            @categories
                        </li>
                    }
                </ul>

                <div class="extension-details">
                    @description
                </div>
            </div>
        </article>
    }
</div>